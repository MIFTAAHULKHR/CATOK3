{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNFL911FxdtECWSklmaAbVx",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/MIFTAAHULKHR/CATOK3/blob/main/PROGRAM%20DATA%20MAHASISWA%20PYTHON\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "9E4fjtVztayj"
      },
      "outputs": [],
      "source": [
        "# Nama : Miftahul Khoiriyah\n",
        "# NIM : 123140064\n",
        "\n",
        "class Mahasiswa:\n",
        "    def __init__(self, nim, nama, ipk, alamat):\n",
        "        self.nim = nim\n",
        "        self.nama = nama\n",
        "        self.ipk = ipk\n",
        "        self.alamat = alamat\n",
        "\n",
        "mahasiswa_list = []\n",
        "\n",
        "def tambah_mahasiswa():\n",
        "    n = int(input(\"Masukkan jumlah mahasiswa: \"))\n",
        "    for _ in range(n):\n",
        "        nim = input(\"Masukkan NIM: \").strip()\n",
        "        nama = input(\"Masukkan Nama: \").strip()\n",
        "        ipk = float(input(\"Masukkan IPK: \"))\n",
        "        alamat = input(\"Masukkan Alamat: \").strip()\n",
        "        mahasiswa_list.append(Mahasiswa(nim, nama, ipk, alamat))\n",
        "    print(\"\\nData mahasiswa berhasil ditambahkan!\\n\")\n",
        "\n",
        "def cari_mahasiswa(nim):\n",
        "    if not mahasiswa_list:\n",
        "        print(\"Data mahasiswa masih kosong. Tambahkan data terlebih dahulu!\")\n",
        "        return\n",
        "\n",
        "    for mhs in mahasiswa_list:\n",
        "        if mhs.nim == nim:\n",
        "            print(f\"\\nData Mahasiswa:\")\n",
        "            print(f\"NIM: {mhs.nim}\")\n",
        "            print(f\"Nama: {mhs.nama}\")\n",
        "            print(f\"IPK: {mhs.ipk}\")\n",
        "            print(f\"Alamat: {mhs.alamat}\\n\")\n",
        "            return\n",
        "    print(\"Mahasiswa dengan NIM tersebut tidak ditemukan.\")\n",
        "\n",
        "def tampilkan_ipk_ekstrem():\n",
        "    if not mahasiswa_list:\n",
        "        print(\"Belum ada data mahasiswa.\")\n",
        "        return\n",
        "\n",
        "    tertinggi = max(mahasiswa_list, key=lambda m: m.ipk)\n",
        "    terendah = min(mahasiswa_list, key=lambda m: m.ipk)\n",
        "\n",
        "    print(f\"\\nMahasiswa dengan IPK tertinggi: {tertinggi.nama} ({tertinggi.ipk})\")\n",
        "    print(f\"Mahasiswa dengan IPK terendah: {terendah.nama} ({terendah.ipk})\\n\")\n",
        "\n",
        "def tampilkan_urutkan():\n",
        "    if not mahasiswa_list:\n",
        "        print(\"Belum ada data mahasiswa untuk diurutkan.\")\n",
        "        return\n",
        "\n",
        "    print(\"\\n1. Urutkan berdasarkan IPK\")\n",
        "    print(\"2. Urutkan berdasarkan NIM\")\n",
        "    try:\n",
        "        pilihan = int(input(\"Pilih metode pengurutan (1/2): \"))\n",
        "    except ValueError:\n",
        "        print(\"Input tidak valid! Harap masukkan angka 1 atau 2.\")\n",
        "        return tampilkan_urutkan()\n",
        "\n",
        "    if pilihan == 1:\n",
        "        mahasiswa_sorted = sorted(mahasiswa_list, key=lambda m: m.ipk, reverse=True)\n",
        "    elif pilihan == 2:\n",
        "        mahasiswa_sorted = sorted(mahasiswa_list, key=lambda m: m.nim)\n",
        "    else:\n",
        "        print(\"Pilihan tidak valid. Silakan pilih 1 atau 2.\")\n",
        "        return tampilkan_urutkan()\n",
        "\n",
        "    print(\"\\nData Mahasiswa setelah diurutkan:\")\n",
        "    print(\"NIM\\tNama\\tIPK\")\n",
        "    for mhs in mahasiswa_sorted:\n",
        "        print(f\"{mhs.nim}\\t{mhs.nama}\\t{mhs.ipk}\")\n",
        "\n",
        "def menu():\n",
        "    print(\"Selamat datang di Sistem Manajemen Mahasiswa!\")\n",
        "    tambah_mahasiswa()\n",
        "\n",
        "    while True:\n",
        "        print(\"\\nMenu:\")\n",
        "        print(\"1. Tambah Mahasiswa\")\n",
        "        print(\"2. Cari Mahasiswa Berdasarkan NIM\")\n",
        "        print(\"3. Tampilkan Mahasiswa dengan IPK Tertinggi & Terendah\")\n",
        "        print(\"4. Tampilkan & Urutkan Data Mahasiswa\")\n",
        "        print(\"5. Keluar\")\n",
        "\n",
        "        pilihan = input(\"Pilih menu (1-5): \").strip()\n",
        "\n",
        "        if pilihan == '1':\n",
        "            tambah_mahasiswa()\n",
        "        elif pilihan == '2':\n",
        "            nim = input(\"Masukkan NIM yang ingin dicari: \").strip()\n",
        "            cari_mahasiswa(nim)\n",
        "        elif pilihan == '3':\n",
        "            tampilkan_ipk_ekstrem()\n",
        "        elif pilihan == '4':\n",
        "            tampilkan_urutkan()\n",
        "        elif pilihan == '5':\n",
        "            print(\"Terima kasih! Program selesai.\")\n",
        "            break\n",
        "        else:\n",
        "            print(\"Pilihan tidak valid, silakan coba lagi.\")\n",
        "\n",
        "menu()\n"
      ]
    }
  ]
}